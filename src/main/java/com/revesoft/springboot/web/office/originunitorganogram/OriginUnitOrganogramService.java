package com.revesoft.springboot.web.office.originunitorganogram;

import org.jose4j.json.internal.json_simple.JSONObject;
import org.springframework.stereotype.Service;

import java.util.ArrayList;

/**
 * Created by reve on 11/8/2017.
 */
@Service
public class OriginUnitOrganogramService {
    OriginUnitOrganogramDAO originUnitOrganogramDAO =null;
    /*
     {
             id          : "string" // will be autogenerated if omitted
             text        : "string" // node text
             icon        : "string" // string for custom
             state       : {
                                 opened    : boolean  // is the node open
                                 disabled  : boolean  // is the node disabled
                                 selected  : boolean  // is the node selected
                             },
             children    : []  // array of strings or objects
             li_attr     : {}  // attributes for the generated LI node
             a_attr      : {}  // attributes for the generated A node
     }
  */
    ArrayList<JSONObject> jsTreeFormat(ArrayList<OriginUnitOrganogramDTO> originUnitOrganogramDTOS){
        OriginUnitOrganogramDTO originUnitOrganogramDTO =null;
        ArrayList<JSONObject> jsTreeFormatList = new ArrayList<>();

        for(int i = 0; i< originUnitOrganogramDTOS.size(); i++){
            originUnitOrganogramDTO = originUnitOrganogramDTOS.get(i);
            JSONObject js = new JSONObject();
            js.put("id","originorg-"+ originUnitOrganogramDTO.getId());
            js.put("text", originUnitOrganogramDTO.getDesignationBng()+"<a  title='ব্যাতিক্রম ' class='red equ'  onclick=showModal('"+originUnitOrganogramDTO.getId()+"','/orgbyoriginorg')><i class='fa fa-exclamation-triangle'></i></a>");
            js.put("icon","fa fa-th-large");
            js.put("children",false);
            jsTreeFormatList.add(js);
        }
        return jsTreeFormatList;
    }
    public OriginUnitOrganogramService() {
        originUnitOrganogramDAO = new OriginUnitOrganogramDAO();
    }

    public ArrayList<OriginUnitOrganogramDTO> getOfficeOriginUnitOrganogramListByOfficeOriginUnitId(int id) {
        ArrayList<OriginUnitOrganogramDTO> originUnitOrganogramDTOS = null;
        try {
            originUnitOrganogramDTOS = originUnitOrganogramDAO.getOfficeOriginUnitOrganogramListByOfficeOriginUnitId(id);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return originUnitOrganogramDTOS;
    }

    public ArrayList<JSONObject> jOriginOrgbyOriginUnit(int id) {

        ArrayList<OriginUnitOrganogramDTO> originUnitOrganogramDTOS = null;
        try {
            originUnitOrganogramDTOS = originUnitOrganogramDAO.jOriginOrgbyOriginUnit(id);
        } catch (Exception e) {
            e.printStackTrace();
        }

        return jsTreeFormat(originUnitOrganogramDTOS);
    }

    public ArrayList<OriginUnitOrganogramDTO> originUnitOrganogramsbyOriginUnits(int[] ids) {
        ArrayList<OriginUnitOrganogramDTO> originUnitOrganogramDTOS = null;
        try {
            originUnitOrganogramDTOS = originUnitOrganogramDAO.originUnitOrganogramsbyOriginUnits(ids);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return originUnitOrganogramDTOS;
    }


    public int add(OriginUnitOrganogramDTO originUnitOrganogramDTO) {
        int result=0;
        try {
             result= originUnitOrganogramDAO.add(originUnitOrganogramDTO);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return  result;
    }

    public int edit(OriginUnitOrganogramDTO originUnitOrganogramDTO) {
        int result=0;
        try {
            result= originUnitOrganogramDAO.edit(originUnitOrganogramDTO);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return  result;
    }

    public int delete(OriginUnitOrganogramDTO originUnitOrganogramDTO) {
        int success = 0;
        try {
            success =originUnitOrganogramDAO.delete(originUnitOrganogramDTO);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return success;
    }


}
