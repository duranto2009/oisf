package com.revesoft.springboot.web.office.originunit;

import org.jose4j.json.internal.json_simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;

/**
 * Created by reve on 11/8/2017.
 */
@Service
public class OriginUnitService {
    @Autowired
    OriginUnitDAO originUnitDAO;

    /*
     {
             id          : "string" // will be autogenerated if omitted
             text        : "string" // node text
             icon        : "string" // string for custom
             state       : {
                                 opened    : boolean  // is the node open
                                 disabled  : boolean  // is the node disabled
                                 selected  : boolean  // is the node selected
                             },
             children    : []  // array of strings or objects
             li_attr     : {}  // attributes for the generated LI node
             a_attr      : {}  // attributes for the generated A node
     }
  */
    ArrayList<JSONObject> jsTreeFormat(ArrayList<OriginUnitDTO> originUnitDTOS){
        OriginUnitDTO originUnitDTO =null;
        ArrayList<JSONObject> jsTreeFormatList = new ArrayList<>();

        for(int i = 0; i< originUnitDTOS.size(); i++){
            originUnitDTO = originUnitDTOS.get(i);
            JSONObject js = new JSONObject();
            js.put("id","originunit-"+ originUnitDTO.getId());
            js.put("text", originUnitDTO.getUnitNameBng());
            js.put("icon","fa fa-th-large");
            js.put("children",true);
            jsTreeFormatList.add(js);
        }
        return jsTreeFormatList;
    }


    public ArrayList<OriginUnitDTO> getOfficeOriginUnitListByOfficeOriginId(int id) {
        ArrayList<OriginUnitDTO> originUnitDTOS = null;
        try {
            originUnitDTOS = originUnitDAO.getOfficeOriginUnitListByOfficeOriginId(id);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return originUnitDTOS;
    }

    public ArrayList<JSONObject> getOfficeOriginUnitListForJsTreeByOfficeOriginId(int id, String li_attr, String a_attr) {
        ArrayList<OriginUnitDTO> originUnitDTOS = null;
        try {
            originUnitDTOS = originUnitDAO.getOfficeOriginUnitListForJsTreeByOfficeOriginId(id);
        } catch (Exception e) {
            e.printStackTrace();
        }

        return jsTreeFormat(originUnitDTOS);
    }

    public ArrayList<OriginUnitDTO> originUnitsbyOrigin(int id) {
        ArrayList<OriginUnitDTO> originUnitDTOS = null;
        try {
            originUnitDTOS = originUnitDAO.originUnitsbyOrigin(id);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return originUnitDTOS;
    }

    public int add(OriginUnitDTO originUnitDTO) {
        int result=0;
        try {
            result=originUnitDAO.add(originUnitDTO);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return result;
    }

    public int edit(OriginUnitDTO originUnitDTO) {

        int result=0;
        try {
            result=originUnitDAO.edit(originUnitDTO);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return result;
    }
    public int delete(OriginUnitDTO originUnitDTO) {
        int success =0;
        try {
            success = originUnitDAO.delete(originUnitDTO);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return success;
    }

    public ArrayList<JSONObject> jOriginUnitbyOriginid(int id) {
        ArrayList<JSONObject> origunUnitDtos = null;
        try {
            origunUnitDtos = jsTreeFormat(originUnitDAO.originUnitsbyOrigin(id));
        } catch (Exception e) {
            e.printStackTrace();
        }
        return origunUnitDtos;
    }
}
