package com.revesoft.springboot.web.office.officeunit;

import org.jose4j.json.internal.json_simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;

/**
 * Created by reve on 11/8/2017.
 */
@Service
public class OfficeUnitService {
    @Autowired
    OfficeUnitDAO officeUnitDAO;


    /*
        {
                id          : "string" // will be autogenerated if omitted
                text        : "string" // node text
                icon        : "string" // string for custom
                state       : {
                                    opened    : boolean  // is the node open
                                    disabled  : boolean  // is the node disabled
                                    selected  : boolean  // is the node selected
                                },
                children    : []  // array of strings or objects
                li_attr     : {}  // attributes for the generated LI node
                a_attr      : {}  // attributes for the generated A node
        }
     */
    public ArrayList<JSONObject> jsTreeFormat(  ArrayList<OfficeUnitDTO> officeUnitDTOS,String li_attr, String a_attr){
        OfficeUnitDTO officeUnitDTO =null;
        ArrayList<JSONObject> jsTreeFormatList = new ArrayList<>();
        JSONObject liattr = new JSONObject();
        JSONObject aattr = new JSONObject();
        liattr.put("class",li_attr);
        aattr.put("class",a_attr);
        for(int i=0; i<officeUnitDTOS.size(); i++){
            officeUnitDTO = officeUnitDTOS.get(i);
            JSONObject js = new JSONObject();
            js.put("id","officeunit-"+officeUnitDTO.getId());
            js.put("text",officeUnitDTO.getUnitNameBng());
            js.put("icon","fa fa-th-large");
            js.put("children",true);
            js.put("li_attr",liattr);
            js.put("a_attr",aattr);
            jsTreeFormatList.add(js);
        }
        return jsTreeFormatList;
    }

    public ArrayList<OfficeUnitDTO> getOfficeUnitListByOfficeId(int id){
        ArrayList<OfficeUnitDTO> officeUnitDTOS = null;
        try {
            officeUnitDTOS = officeUnitDAO.getOfficeUnitListByOfficeId(id);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return officeUnitDTOS;
    }
    public ArrayList<OfficeUnitDTO> getAllOfficeUnit(){
        ArrayList<OfficeUnitDTO> officeUnitDTOS = null;
        try {
            officeUnitDTOS = officeUnitDAO.getAllOfficeUnit();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return officeUnitDTOS;
    }

//     public ArrayList<JSONObject> getOfficeUnitListForJsTreeByOfficeId(int id, String li_attr, String a_attr){
//        ArrayList<OfficeUnitDTO> officeUnitDTOS = null;
//        try {
//            officeUnitDTOS = officeUnitDAO.getOfficeUnitListForJsTreeByOfficeId(id);
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//
//        return jsTreeFormat(officeUnitDTOS,li_attr,a_attr);
//    }

    public ArrayList<OfficeUnitDTO> officeUnitbyOffice(int id) {
        ArrayList<OfficeUnitDTO> officeUnitDTOS = null;
        try {
            officeUnitDTOS = officeUnitDAO.officeUnitbyOffice(id);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return officeUnitDTOS;
    }

    public int deleteUnit(int[] id,int userid) {
        int success = 0;
        try {
            success = officeUnitDAO.deleteUnit(id,userid);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return success;
    }

    public int transferUnit(int[] id,int officeId,int userid) {
        int success = 0;
        try {
            success = officeUnitDAO.transferUnit2(id,officeId,userid);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return success;
    }
    public int originIdByofficeId(int officeId){
        int id = 0;
        try{
            id = officeUnitDAO.originIdByofficeId(officeId);
        }catch(Exception e){
            e.printStackTrace();
        }
        return id;
    }

    public void edit(OfficeUnitDTO officeUnitDTO) {
        try {
            officeUnitDAO.edit(officeUnitDTO);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
