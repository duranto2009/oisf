package com.revesoft.springboot.web.office.officeunitorganogram;

import org.jose4j.json.internal.json_simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;

/**
 * Created by reve on 11/8/2017.
 */
@Service
public class OfficeUnitOrganogramService {
    @Autowired
    OfficeUnitOrganogramDAO officeUnitOrganogramDAO ;


    /*
        {
                id          : "string" // will be autogenerated if omitted
                text        : "string" // node text
                icon        : "string" // string for custom
                state       : {
                                    opened    : boolean  // is the node open
                                    disabled  : boolean  // is the node disabled
                                    selected  : boolean  // is the node selected
                                },
                children    : []  // array of strings or objects
                li_attr     : {}  // attributes for the generated LI node
                a_attr      : {}  // attributes for the generated A node
        }
     */
    ArrayList<JSONObject> jsTreeFormat(ArrayList<OfficeUnitOrganogramDTO> officeUnitDTOS, String li_attr, String a_attr){
        OfficeUnitOrganogramDTO officeUnitOrganogramDTO =null;
        ArrayList<JSONObject> jsTreeFormatList = new ArrayList<>();
        JSONObject liattr = new JSONObject();
        JSONObject aattr = new JSONObject();
        liattr.put("class",li_attr);
        aattr.put("class",a_attr);
        for(int i=0; i<officeUnitDTOS.size(); i++){
            officeUnitOrganogramDTO = officeUnitDTOS.get(i);
            JSONObject js = new JSONObject();
            js.put("id","officeunitorganogram-"+officeUnitOrganogramDTO.getId());
            js.put("text",officeUnitOrganogramDTO.getDesignationBng());
            js.put("icon","fa fa-th-list");
            js.put("children",false);
            js.put("li_attr",liattr);
            js.put("a_attr",aattr);
            jsTreeFormatList.add(js);
        }
        return jsTreeFormatList;
    }


    public ArrayList<OfficeUnitOrganogramDTO> getOfficeUnitOrganogramListByOfficeUnitId(int id) {
        ArrayList<OfficeUnitOrganogramDTO> officeUnitOrganogramDTOS =null;
        try {
            officeUnitOrganogramDTOS = officeUnitOrganogramDAO.getOfficeUnitOrganogramListByOfficeUnitId(id);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return officeUnitOrganogramDTOS;
    }

    public ArrayList<JSONObject> getOfficeUnitOrganogramListForJsTreeByOfficeUnitId(int id, String li_attr, String a_attr) {
        ArrayList<OfficeUnitOrganogramDTO> officeUnitOrganogramDTOS =null;
        try {
            officeUnitOrganogramDTOS = officeUnitOrganogramDAO.getOfficeUnitOrganogramListByOfficeUnitId(id);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return jsTreeFormat(officeUnitOrganogramDTOS, li_attr, a_attr);
    }

    public ArrayList<OfficeUnitOrganogramDTO> officeUnitOrganogrambyOffice(int id) {
        ArrayList<OfficeUnitOrganogramDTO> officeUnitOrganogramDTOS =null;
        try {
            officeUnitOrganogramDTOS = officeUnitOrganogramDAO.officeUnitOrganogrambyOffice(id);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return  officeUnitOrganogramDTOS;
    }

    public int deleteOrganogramList(int[] id, int userId) {

        int success = 0;
        try {
            success = officeUnitOrganogramDAO.deleteOrganogramList(id,userId);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return success;

    }

    public int transferOrganogram(String[] id, int officeId, int userId) {
        int success = 0;
        try {
            success = officeUnitOrganogramDAO.transferOrganogram3(id,officeId,userId);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return success;
    }

    public ArrayList<JSONObject> orgbyOriginOrg(int id) {
        ArrayList<JSONObject> officeUnitOrganogramDTOS =null;
        try {
            officeUnitOrganogramDTOS = officeUnitOrganogramDAO.orgbyOriginOrg(id);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return  officeUnitOrganogramDTOS;
    }

    public int getOfficeIdByOrganogramId(long id)throws Exception{
        int officeId = -100;
        try {
            officeId = officeUnitOrganogramDAO.getOfficeIdByOrganogramId(id);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return officeId;
    }

}
